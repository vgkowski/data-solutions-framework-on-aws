name: release
on:
  workflow_dispatch: {}
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      latest_commit: ${{ steps.git_remote.outputs.latest_commit }}
    env:
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          fetch-depth: 0
      - name: Set git identity
        run: |-
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
      - name: Setup Node.js
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
        with:
          node-version: 20
      - name: Install dependencies
        run: yarn install --check-files --frozen-lockfile
      - name: release
        run: npx projen release
      - name: Check for new commits
        id: git_remote
        run: echo "latest_commit=$(git ls-remote origin -h ${{ github.ref }} | cut -f1)" >> $GITHUB_OUTPUT
      - name: Backup artifact permissions
        working-directory: framework
        if: ${{ steps.git_remote.outputs.latest_commit == github.sha }}
        run: cd dist && getfacl -R . > permissions-backup.acl
        continue-on-error: true
      - name: Upload artifact
        if: ${{ steps.git_remote.outputs.latest_commit == github.sha }}
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: build-artifact
          path: framework
          include-hidden-files: true
      - name: Backup examples permissions
        working-directory: examples
        if: ${{ steps.git_remote.outputs.latest_commit == github.sha }}
        run: getfacl -R . > permissions-backup.acl
        continue-on-error: true
      - name: Upload examples artifact
        if: ${{ steps.git_remote.outputs.latest_commit == github.sha }}
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: examples-artifact
          path: examples
          include-hidden-files: true
  release_github:
    name: Publish to GitHub Releases
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: needs.release.outputs.latest_commit == github.sha
    steps:
      - uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
        with:
          node-version: 20
      - name: Download build artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: build-artifact
          path: framework/dist
      - name: Download examples artifact
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: examples-artifact
          path: examples
      - name: Restore build artifact permissions
        working-directory: framework
        run: cd dist && setfacl --restore=permissions-backup.acl
        continue-on-error: true
      - name: Restore examples artifact permissions
        working-directory: examples
        run: setfacl --restore=permissions-backup.acl
        continue-on-error: true
      - name: Prepare Repository
        working-directory: framework
        run: mv dist .repo
      - name: Collect GitHub Metadata
        working-directory: framework
        run: mv .repo/dist dist
      - name: Release
        working-directory: framework
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_REF: ${{ github.ref }}
        run: errout=$(mktemp); gh release create $(cat dist/releasetag.txt) -R $GITHUB_REPOSITORY -F dist/changelog.md -t $(cat dist/releasetag.txt) --target $GITHUB_REF 2> $errout && true; exitcode=$?; if [ $exitcode -ne 0 ] && ! grep -q "Release.tag_name already exists" $errout; then cat $errout; exit $exitcode; fi
      - name: Add examples
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_REF: ${{ github.ref }}
        working-directory: examples
        run: ./package-examples.sh && gh release upload "$(cat ../framework/dist/releasetag.txt)" ../dist/examples/* --clobber -R $GITHUB_REPOSITORY
  release_npm:
    name: Publish to npm
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
    if: needs.release.outputs.latest_commit == github.sha
    steps:
      - uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
        with:
          node-version: 20
      - name: Download build artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: build-artifact
          path: framework/dist
      - name: Restore build artifact permissions
        working-directory: framework
        run: cd dist && setfacl --restore=permissions-backup.acl
        continue-on-error: true
      - name: Prepare Repository
        working-directory: framework
        run: mv dist .repo
      - name: Install Dependencies
        working-directory: framework
        run: cd .repo && yarn install --check-files --frozen-lockfile
      - name: Create js artifact
        working-directory: framework
        run: cd .repo && npx projen package:js
      - name: Collect js Artifact
        working-directory: framework
        run: mv .repo/dist dist
      - name: Release
        working-directory: framework
        env:
          NPM_DIST_TAG: latest
          NPM_REGISTRY: registry.npmjs.org
          NPM_TOKEN: ${{ secrets.DSF_NPM_TOKEN }}
          NPM_ACCESS_LEVEL: public
        run: npx -p publib@latest publib-npm
  release_pypi:
    name: Publish to PyPI
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    if: needs.release.outputs.latest_commit == github.sha
    steps:
      - uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
        with:
          node-version: 20
      - uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 #4.7.1
        with:
          python-version: 3.x
      - name: Download build artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: build-artifact
          path: framework/dist
      - name: Restore build artifact permissions
        working-directory: framework
        run: cd dist && setfacl --restore=permissions-backup.acl
        continue-on-error: true
      - name: Prepare Repository
        working-directory: framework
        run: mv dist .repo
      - name: Install Dependencies
        working-directory: framework
        run: cd .repo && yarn install --check-files --frozen-lockfile
      - name: Create python artifact
        working-directory: framework
        run: cd .repo && npx projen package:python
      - name: Collect python Artifact
        working-directory: framework
        run: mv .repo/dist dist
      - name: Release
        uses: pypa/gh-action-pypi-publish@2f6f737ca5f74c637829c0f5c3acd0e29ea5e8bf #v1.8.11
        with:
          packages-dir: framework/dist/python/
