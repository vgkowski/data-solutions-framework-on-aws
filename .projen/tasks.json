{
  "tasks": {
    "build": {
      "name": "build",
      "description": "Full release build",
      "steps": [
        {
          "spawn": "default"
        },
        {
          "spawn": "pre-compile"
        },
        {
          "spawn": "compile"
        },
        {
          "spawn": "post-compile"
        },
        {
          "spawn": "test"
        },
        {
          "spawn": "package"
        }
      ]
    },
    "clobber": {
      "name": "clobber",
      "description": "hard resets to HEAD of origin and cleans the local repo",
      "env": {
        "BRANCH": "$(git branch --show-current)"
      },
      "steps": [
        {
          "exec": "git checkout -b scratch",
          "name": "save current HEAD in \"scratch\" branch"
        },
        {
          "exec": "git checkout $BRANCH"
        },
        {
          "exec": "git fetch origin",
          "name": "fetch latest changes from origin"
        },
        {
          "exec": "git reset --hard origin/$BRANCH",
          "name": "hard reset to origin commit"
        },
        {
          "exec": "git clean -fdx",
          "name": "clean all untracked files"
        },
        {
          "say": "ready to rock! (unpushed commits are under the \"scratch\" branch)"
        }
      ],
      "condition": "git diff --exit-code > /dev/null"
    },
    "compile": {
      "name": "compile",
      "description": "Only compile",
      "steps": [
        {
          "spawn": "license"
        },
        {
          "exec": "lerna run compile --stream"
        }
      ]
    },
    "default": {
      "name": "default",
      "description": "Synthesize project files",
      "steps": [
        {
          "exec": "ts-node --skip-project .projenrc.ts"
        },
        {
          "exec": "lerna run default --stream"
        }
      ]
    },
    "eject": {
      "name": "eject",
      "description": "Remove projen from the project",
      "env": {
        "PROJEN_EJECTING": "true"
      },
      "steps": [
        {
          "spawn": "default"
        },
        {
          "exec": "lerna run eject --stream"
        }
      ]
    },
    "install": {
      "name": "install",
      "description": "Install project dependencies and update lockfile (non-frozen)",
      "steps": [
        {
          "exec": "yarn install --check-files"
        },
        {
          "exec": "lerna run install --stream"
        }
      ]
    },
    "install:ci": {
      "name": "install:ci",
      "description": "Install project dependencies using frozen lockfile",
      "steps": [
        {
          "exec": "yarn install --check-files --frozen-lockfile"
        },
        {
          "exec": "lerna run install:ci --stream"
        }
      ]
    },
    "license": {
      "name": "license",
      "description": "Overwrite LICENSE file with correct copyrightPeriod and cpyrightOwner",
      "env": {
        "PERIOD": "2021-2025",
        "OWNER": "Amazon.com, Inc. or its affiliates. All Rights Reserved."
      },
      "steps": [
        {
          "exec": "sed -i.bak 's/\\[yyyy\\]/'\"$PERIOD\"'/g' LICENSE"
        },
        {
          "exec": "sed -i.bak 's/\\[name of copyright owner\\]/'\"$OWNER\"'/g' LICENSE"
        },
        {
          "exec": "sed -i.bak 's/\\[yyyy\\]/'\"$PERIOD\"'/g' framework/LICENSE"
        },
        {
          "exec": "sed -i.bak 's/\\[name of copyright owner\\]/'\"$OWNER\"'/g' framework/LICENSE"
        },
        {
          "exec": "lerna run license --stream"
        }
      ]
    },
    "package": {
      "name": "package",
      "description": "Creates the distribution package",
      "steps": [
        {
          "exec": "mkdir -p dist/js"
        },
        {
          "exec": "lerna run package --stream"
        },
        {
          "exec": "lerna-projen copy-dist framework/dist dist"
        },
        {
          "exec": "lerna-projen copy-dist examples/spark-data-lake/infra/undefined dist"
        },
        {
          "exec": "lerna-projen copy-dist examples/dsf-quickstart/undefined dist"
        },
        {
          "exec": "lerna-projen copy-dist examples/opensearch-quickstart/undefined dist"
        },
        {
          "exec": "lerna-projen copy-dist examples/redshift-data-warehouse/undefined dist"
        },
        {
          "exec": "lerna-projen copy-dist examples/datazone-msk-governance/undefined dist"
        }
      ]
    },
    "post-compile": {
      "name": "post-compile",
      "description": "Runs after successful compilation",
      "steps": [
        {
          "exec": "lerna run post-compile --stream"
        }
      ]
    },
    "pre-compile": {
      "name": "pre-compile",
      "description": "Prepare the project for compilation",
      "steps": [
        {
          "exec": "lerna-projen clean-dist dist"
        },
        {
          "exec": "lerna run pre-compile --stream"
        }
      ]
    },
    "release": {
      "name": "release",
      "description": "Release project",
      "steps": [
        {
          "exec": "lerna run release --stream"
        }
      ]
    },
    "test": {
      "name": "test",
      "description": "Run tests",
      "steps": [
        {
          "exec": "lerna run test --stream"
        }
      ]
    },
    "test:e2e": {
      "name": "test:e2e",
      "description": "Run end-to-end tests",
      "steps": [
        {
          "exec": "lerna run test:e2e --stream"
        }
      ]
    }
  },
  "env": {
    "PATH": "$(npx -c \"node --print process.env.PATH\")"
  },
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \"npx projen\"."
}
